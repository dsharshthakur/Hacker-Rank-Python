List Comprehension:


Q1)Let's learn about list comprehensions! You are given three integers  and  representing the dimensions of a cuboid along with an integer .
Print a list of all possible coordinates given by  on a 3D grid where the sum of  is not equal to n.

solution1 :
_____________

_x=[i for i in range(y+1)]
_y=[j for j in range(y+1)]
_z=[k for k in range(z+1)]
final=[]
    for i in _x:
        for j in _y:
            for k in _z:
                if (i+j+k) != n:
                    final.append([i,j,k])
    
print(final)


Solution 2:
_____________
_x=[i for i in range(x+1)]
_y=[j for j in range(y+1)]
_z=[k for k in range(z+1)]
final=[]
for i in _x:
  for j in _y:
    for k in _z:
      if (i+j+k) != n:
        final.append([i,j,k])
print(final)

SOlution 3:
_______________
import itertools

def result(x,y,z,n):
    _x=[i for i in range(x+1)]
    _y=[j for j in range(y+1)]
    _z=[k for k in range(x+1)]
    res=[list(c) for c in itertools.product(_x,_y,_z) if sum(c) != n ]
    return res
print(result(x,y,z,n))

Q2)
FINDING THE PERCENTAGE :
The provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. 
Print the average of the marks array for the student name provided, showing 2 places after the decimal.

Solution :

for name in student_marks.keys():
    mrks=student_marks.get(name)
    avg_mrks=sum(mrks)/len(mrks)
    avg_dt[name]=f"{avg_mrks:.2f}" 
   
print(avg_dt[query_name])

Q3)
collections.namedtuple()
Basically, namedtuples are easy to create, lightweight object types.
They turn tuples into convenient containers for simple tasks.
With namedtuples, you donâ€™t have to use integer indices for accessing members of a tuple.

Solution:
from collections import namedtuple
total_st=int(input())
col_names=input().split()

st=namedtuple("student",col_names)
marks_col=col_names.index("MARKS")
all_marks=[]

for i in range(total_st):
    marks=input().split()[marks_col]
    all_marks.append(int(marks))
avg_marks=sum(all_marks)/len(all_marks)
print(f"{avg_marks:.2f}")
    
    

